import matplotlib.pyplot as plt
import numpy as np
from matplotlib import rc
plt.rcParams['mathtext.fontset'] = 'custom'
plt.rcParams['mathtext.rm'] = 'Bitstream Vera Sans'
plt.rcParams['mathtext.it'] = 'Bitstream Vera Sans:italic'
plt.rcParams['mathtext.bf'] = 'Bitstream Vera Sans:bold'
rc('text', usetex=True)

#Hier muss die Anzahl an Sweeps und L entsprechend simulation.cpp eingestellt werden.
#Eventuell muss auch die Groesse der Marker angepasst werden.
Sweeps = 5*1000
L = 100

t = np.linspace(1, Sweeps, Sweeps)
s = t/(L*L)

x_1, y_1 = np.genfromtxt('spinup_1.txt', unpack=True)
a_1, b_1 = np.genfromtxt('spindown_1.txt', unpack=True)

plt.figure(1, (10, 10))
plt.scatter(x_1, y_1, c='darkblue', s=40, linewidth=0, label=r'Spin up')
plt.scatter(a_1, b_1, c='darkorange', s=40, linewidth=0, label=r'Spin down')
plt.legend(loc='best', fontsize='small')
plt.xlabel('$x$')
plt.ylabel('$y$')
plt.xlim(-1, L)
plt.ylim(-1, L)
plt.savefig('momentaufnahme_1.pdf')
plt.clf()

x_2, y_2 = np.genfromtxt('spinup_2.txt', unpack=True)
a_2, b_2 = np.genfromtxt('spindown_2.txt', unpack=True)

plt.figure(1, (10, 10))
plt.scatter(x_2, y_2, c='darkblue', s=40, linewidth=0, label=r'Spin up')
plt.scatter(a_2, b_2, c='darkorange', s=40, linewidth=0, label=r'Spin down')
plt.legend(loc='best', fontsize='small')
plt.xlabel('$x$')
plt.ylabel('$y$')
plt.xlim(-1, L)
plt.ylim(-1, L)
plt.savefig('momentaufnahme_2.pdf')
plt.clf()

x_3, y_3 = np.genfromtxt('spinup_3.txt', unpack=True)
a_3, b_3 = np.genfromtxt('spindown_3.txt', unpack=True)

plt.figure(1, (10, 10))
plt.scatter(x_3, y_3, c='darkblue', s=40, linewidth=0, label=r'Spin up')
plt.scatter(a_3, b_3, c='darkorange', s=40, linewidth=0, label=r'Spin down')
plt.legend(loc='best', fontsize='small')
plt.xlabel(r'$x$')
plt.ylabel(r'$y$')
plt.xlim(-1, L)
plt.ylim(-1, L)
plt.savefig('momentaufnahme_3.pdf')
plt.clf()

plt.figure(1, (7, 5))
energie_equi_geordnet_1 = np.genfromtxt('Energie_Equi_geordnet_1.txt', unpack=True)
energie_equi_geordnet_2 = np.genfromtxt('Energie_Equi_geordnet_2.txt', unpack=True)
energie_equi_geordnet_3 = np.genfromtxt('Energie_Equi_geordnet_3.txt', unpack=True)
plt.xlabel(r'$t$')
plt.ylabel(r'$e(t)$')
plt.plot(s, energie_equi_geordnet_1, c='darkblue', label=r'$k_B T = 1.5$')
plt.plot(s, energie_equi_geordnet_2, c='darkorange', label=r'$k_B T = 2.27$')
plt.plot(s, energie_equi_geordnet_3, c='darkgreen', label=r'$k_B T = 3$')
plt.grid()
plt.xlim(0, 15)
plt.legend(loc='best')
plt.savefig('Energie_Equi_geordnet.pdf')
plt.clf()

plt.figure(1, (7, 5))
energie_equi_1 = np.genfromtxt('Energie_Equi_1.txt', unpack=True)
energie_equi_2 = np.genfromtxt('Energie_Equi_2.txt', unpack=True)
energie_equi_3 = np.genfromtxt('Energie_Equi_3.txt', unpack=True)
plt.xlabel(r'$t$')
plt.ylabel(r'$e(t)$')
plt.plot(s, energie_equi_1, c='darkblue', label=r'$k_B T = 1.5$')
plt.plot(s, energie_equi_2, c='darkorange', label=r'$k_B T = 2.27$')
plt.plot(s, energie_equi_3, c='darkgreen', label=r'$k_B T = 3$')
plt.grid()
plt.xlim(0, 15)
plt.legend(loc='best')
plt.savefig('Energie_Equi.pdf')
plt.clf()

plt.figure(1, (7, 5))
energie_1 = np.genfromtxt('Energie_1.txt', unpack=True)
energie_2 = np.genfromtxt('Energie_2.txt', unpack=True)
energie_3 = np.genfromtxt('Energie_3.txt', unpack=True)
plt.xlabel(r'$t$')
plt.ylabel(r'$e(t)$')
plt.plot(t, energie_1, c='darkblue', label=r'$k_B T = 1.5$')
plt.plot(t, energie_2, c='darkorange', label=r'$k_B T = 2.27$')
plt.plot(t, energie_3, c='darkgreen', label=r'$k_B T = 3$')
plt.grid()
plt.legend(loc='best')
plt.savefig('Energie.pdf')
plt.clf()

plt.figure(1, (7, 5))
magnetisierung_1 = np.genfromtxt('Magnetisierung_1.txt', unpack=True)
magnetisierung_2 = np.genfromtxt('Magnetisierung_2.txt', unpack=True)
magnetisierung_3 = np.genfromtxt('Magnetisierung_3.txt', unpack=True)
plt.xlabel(r'$t$')
plt.ylabel(r'$\langle m \rangle$')
plt.plot(t, magnetisierung_1, c='darkblue', label=r'$k_B T = 1.5$')
plt.plot(t, magnetisierung_2, c='darkorange', label=r'$k_B T = 2.27$')
plt.plot(t, magnetisierung_3, c='darkgreen', label=r'$k_B T = 3$')
plt.grid()
plt.legend(loc='best')
plt.savefig('Magnetisierung.pdf')
plt.clf()

plt.figure(1, (7, 5))
betrag_magnetisierung_1 = np.genfromtxt('Betrag_Magnetisierung_1.txt', unpack=True)
betrag_magnetisierung_2 = np.genfromtxt('Betrag_Magnetisierung_2.txt', unpack=True)
betrag_magnetisierung_3 = np.genfromtxt('Betrag_Magnetisierung_3.txt', unpack=True)
plt.xlabel(r'$t$')
plt.ylabel(r'$\langle | m | \rangle $')
plt.plot(t, betrag_magnetisierung_1, c='darkblue', label=r'$k_B T = 1.5$')
plt.plot(t, betrag_magnetisierung_2, c='darkorange', label=r'$k_B T = 2.27$')
plt.plot(t, betrag_magnetisierung_3, c='darkgreen', label=r'$k_B T = 3$')
plt.grid()
plt.legend(loc='best')
plt.savefig('Betrag_Magnetisierung.pdf')
plt.clf()
